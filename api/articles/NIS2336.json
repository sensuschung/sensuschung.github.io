{"title":"NIS2336","uid":"ca59df81d26b019565ef81d82c38a865","slug":"NIS2336","date":"2024-06-02T14:16:00.000Z","updated":"2024-06-18T15:30:34.319Z","comments":true,"path":"api/articles/NIS2336.json","keywords":null,"cover":[],"content":"<h1 id=\"概论\">概论</h1>\r\n<h2 id=\"概念\">概念</h2>\r\n<ul class=\"task-list\">\r\n<li><p><label><input\r\ntype=\"checkbox\" />翻译程序：源语言、源程序、目标语言、目标程序</label></p></li>\r\n<li><p><label><input type=\"checkbox\" />编译程序</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />编译的两大（编译和运行)/三大阶段(编译、汇编和运行）及区别（编译阶段生成的目标程序）</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />解释程序和编译程序的主要区别</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />编译的六个阶段、前端和后端</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />词法分析：源程序、字符串、扫描分解、单词/单词符号/符号</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />语法分析：单词符号串、语法规则、识别语法单位、检查</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />语义分析、中间代码生成：语法单位、<strong>静态语义省查</strong>、分析含义、<u>\r\n另一种 </u> 语言描述（什么语言？）</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />代码优化：对（）进行（）改造或变换，高效，主要包括（局部优化）和（循环优化）</label></p>\r\n<ul class=\"task-list\">\r\n<li><label><input\r\ntype=\"checkbox\" />目标代码生成：将中间代码变换成（绝对指令代码）或（可重定位指令代码）或（汇编指令代码）</label></li>\r\n</ul></li>\r\n<li><p><label><input type=\"checkbox\" />在 <strong>每个</strong>\r\n过程中，涉及 <u> 表格管理和错误处理\r\n</u>：表格的构造、查找、修改、存取</label></p></li>\r\n</ul>\r\n<p><img src=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/study/NIS2334/image-20240530102430879.png\" alt=\"编译流程\" style=\"zoom: 50%;\" /></p>\r\n<h2 id=\"判断\">判断</h2>\r\n<ul class=\"task-list\">\r\n<li><label><input\r\ntype=\"checkbox\" />上面的图中的流程是逻辑关系吗？是执行时间上的先后关系吗？可按照不同的执行流程来组织吗？</label>\r\n<ul class=\"task-list\">\r\n<li><label><input\r\ntype=\"checkbox\" />相关：一遍扫描?多遍扫描？开始和结束？优缺点？</label></li>\r\n</ul></li>\r\n<li><label><input type=\"checkbox\" />编译程序：复杂系统程序</label></li>\r\n</ul>\r\n<h1 id=\"文法和语言\">文法和语言</h1>\r\n<h2 id=\"概念-1\">概念</h2>\r\n<h3 id=\"字母表和符号串\">字母表和符号串</h3>\r\n<ul>\r\n<li><p><label><input\r\ntype=\"checkbox\" />字母表：含义、个数、类型</label></p></li>\r\n<li><p><label><input type=\"checkbox\" />符号/字符</label></p></li>\r\n<li><p><label><input type=\"checkbox\" />符号串：有穷、特定、空 <span\r\nclass=\"math inline\">\\(\\epsilon\\)</span>，<span\r\nclass=\"math inline\">\\(|\\epsilon|=0\\)</span></label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />运算：符号串（连接、幂运算）集合（乘积-所有符号串、闭包、正闭包）</label></p></li>\r\n<li><p><span class=\"math inline\">\\(\\epsilon\\)</span> 是空符号串，<span\r\nclass=\"math inline\">\\(\\{\\epsilon\\}\\)</span> 是 <span\r\nclass=\"math inline\">\\(\\epsilon\\)</span> 组成的集合，<span\r\nstyle=\"color:#CC0000;\"> 不是空集合 </span>，<span\r\nclass=\"math inline\">\\(\\Phi=\\{\\}\\)</span> 是空集合</p></li>\r\n</ul>\r\n<h3 id=\"文法形式化\">文法形式化</h3>\r\n<ul>\r\n<li><p><label><input\r\ntype=\"checkbox\" />形式语言（字母表、规则、符号串）、描述方法（枚举、文法）</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />规则/产生式：终结符与非终结符</label></p></li>\r\n<li><p><label><input type=\"checkbox\" />文法：四元组（<span\r\nclass=\"math inline\">\\(V_N,V_T,P,S\\)</span>）、字汇表（<span\r\nclass=\"math inline\">\\(V\\)</span>）、关键、候选式与识别符号</label></p></li>\r\n<li><p>序列的集合成为形式语言</p></li>\r\n<li><p>形式语言 <span style=\"color:#CC0000;\"> 不考虑语义\r\n</span></p></li>\r\n<li><p>设计的文法不能超出所定义语言的范围</p></li>\r\n</ul>\r\n<h3 id=\"推导与规约\">推导与规约</h3>\r\n<ul>\r\n<li><p><label><input type=\"checkbox\" />推导：</label></p>\r\n<ul class=\"task-list\">\r\n<li><label><input type=\"checkbox\" />直接推导（<span\r\nclass=\"math inline\">\\(xAy\\Rightarrow xay\\)</span> 且 <span\r\nclass=\"math inline\">\\(A\\rightarrow a\\)</span>）, 仅使用 <span\r\nstyle=\"color:#CC0000;\"> 一次 </span> 规则</label></li>\r\n<li><label><input type=\"checkbox\" />推导：<span\r\nclass=\"math inline\">\\(a_0\\xRightarrow{+}a_n\\)</span>，长度为 n(<span\r\nclass=\"math inline\">\\(n\\gt 0\\)</span>)的推导</label></li>\r\n<li><label><input type=\"checkbox\" />广义推导：<span\r\nclass=\"math inline\">\\(a_0\\xRightarrow{*}a_n\\)</span> 长度为 n(<span\r\nclass=\"math inline\">\\(n\\ge 0\\)</span>)</label></li>\r\n</ul></li>\r\n<li><p><label><input type=\"checkbox\" />句型与句子、语言（<span\r\nstyle=\"color:#CC0000;\"> 句子 </span> 的集合）</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />最左推导/最右推导（规范推导）、规范句型</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />最左规约（规范规约）/最右规约</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />规则/文法的左递归/右递归/递归（哪一边不变？）</label></p></li>\r\n<li><p>文法给定，则语言确定，且 <span\r\nclass=\"math inline\">\\(L(G)\\subseteq V_T^*\\)</span></p></li>\r\n<li><p>文法的递归需要至少一步推导</p></li>\r\n<li><p>递归使得我们能用有限的规则定义无穷集合的语言</p></li>\r\n</ul>\r\n<h3 id=\"语法树短语文法二义性\">语法树、短语、文法二义性</h3>\r\n<ul>\r\n<li><p><label><input\r\ntype=\"checkbox\" />语法树、子树、简单子树</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />短语（终结符）、直接短语、句柄（最左直接短语）</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />文法二义性：两个语法树/两个不同的最左或最右推导</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />语言二义性/先天二义性（举例：<span\r\nclass=\"math inline\">\\(L=\\{a^i b^j c^k\r\n|i=j或j=k且i,j,k\\ge1\\}\\)</span>）</label></p></li>\r\n<li><p>语法树和短语等的关系</p>\r\n<ul>\r\n<li>短语：子树的末端结点符号串是相对于子树根的短语</li>\r\n<li>直接短语：简单子树的末端结点符号串是相对于简单子树根的短语</li>\r\n<li>句柄：最左简单子树的末端结点形成的符号串</li>\r\n</ul></li>\r\n<li><p>短语、直接短语和句柄是<span\r\nstyle=\"color:#CC0000;\">针对某一句型</span>的</p></li>\r\n</ul>\r\n<h3 id=\"文法和语言的分类\">文法和语言的分类</h3>\r\n<ul class=\"task-list\">\r\n<li><label><input\r\ntype=\"checkbox\" />0型文法/无限制文法/无限制语言</label></li>\r\n<li><label><input type=\"checkbox\" />1型文法/上下文有关文法</label></li>\r\n<li><label><input type=\"checkbox\" />2型文法/上下文无关文法</label></li>\r\n<li><label><input\r\ntype=\"checkbox\" />3型文法/正规文法/左右线型文法/正规语言（展开的是哪里的终结符?留下的是哪里的非终结符？）</label></li>\r\n<li><label><input type=\"checkbox\" />正规文法<span\r\nclass=\"math inline\">\\(\\subseteq\\)</span>上下文无关<span\r\nclass=\"math inline\">\\(\\subseteq\\)</span>上下文有关<span\r\nclass=\"math inline\">\\(\\subseteq\\)</span>无限制</label></li>\r\n<li><label><input\r\ntype=\"checkbox\" />文法限制：有害规则、多余规则</label></li>\r\n</ul>\r\n<h2 id=\"判断-1\">判断</h2>\r\n<ul class=\"task-list\">\r\n<li><label><input type=\"checkbox\" />形式语言考虑语义。（x）</label></li>\r\n<li><label><input\r\ntype=\"checkbox\" />每个非终结符表示一定符号串的集合。（√）</label></li>\r\n<li><label><input type=\"checkbox\" />推导的依据是 <span\r\nstyle=\"text-decoration:underline;\"> 规则 </span>(√)</label></li>\r\n<li><label><input\r\ntype=\"checkbox\" />当一个语言是无穷集合时，定义该语言的文法不一定是递归的。（×）</label></li>\r\n</ul>\r\n<h2 id=\"题型\">题型</h2>\r\n<h3 id=\"文法的设计\">文法的设计</h3>\r\n<ul>\r\n<li><strong>根据字母表设计文法</strong></li>\r\n</ul>\r\n<blockquote>\r\n<p>相同的幂必须合并在一起</p>\r\n</blockquote>\r\n<p>例题：设字母表 <span\r\nclass=\"math inline\">\\(\\Sigma=\\{a,b\\}\\)</span>，尝试设计一个文法描述语言\r\n<span class=\"math inline\">\\(L=\\{a^n b^n|n\\ge 0\\}\\)</span></p>\r\n<p>解：</p>\r\n<p><span\r\nclass=\"math inline\">\\(V_T=\\{a,b\\}\\\\V_N=\\{L\\}\\\\P=\\{L\\rightarrow\\epsilon|aLb\\}\\\\S=L\\)</span></p>\r\n<h3 id=\"证明是句型句子\">证明是句型、句子</h3>\r\n<blockquote>\r\n<p>证明有相应的推导即可</p>\r\n</blockquote>\r\n<p>例题：设有文法 <span class=\"math inline\">\\(G[E]:E\\rightarrow\r\nE+E|E*E|(E)|i\\)</span>，尝试证明符号串 <span\r\nclass=\"math inline\">\\((i*i+i)\\)</span> 是 <span\r\nclass=\"math inline\">\\(G[E]\\)</span> 的一个句子</p>\r\n<p>解：<span class=\"math inline\">\\(E \\Rightarrow\r\n(E)\\Rightarrow(E+E)\\Rightarrow(E*E+E)\\Rightarrow(i*E+E)\\Rightarrow(i*i+E)\\Rightarrow(i*i+i)\\)</span></p>\r\n<h3 id=\"从已知文法确定语言\">从已知文法确定语言</h3>\r\n<blockquote>\r\n<p>中心思想: 从开始符号出发, 反复使用规则, 对非终结符施行替换和展开</p>\r\n</blockquote>\r\n<p>例题: <span class=\"math inline\">\\(G[S]:S\\rightarrow 01|0S1\\)</span>\r\n解答：<span class=\"math inline\">\\(L(G[S])={0^n1^n|n\\ge 1}\\)</span></p>\r\n<h3 id=\"推导与规约-1\">推导与规约</h3>\r\n<ul>\r\n<li>最左推导与最右推导示例</li>\r\n</ul>\r\n<p>例题：设文法 <span class=\"math inline\">\\(G[S]:S\\rightarrow AB;\r\nA\\rightarrow A0|1B;B\\rightarrow 0|S1\\)</span> 给出句子 101001\r\n的最左和最有推导</p>\r\n<p>最右推导： <span class=\"math display\">\\[\r\n\\begin{aligned}\r\nS &amp;\\Rightarrow AB \\Rightarrow AS1 \\Rightarrow AAB1 \\Rightarrow\r\nAA01\\\\\r\n&amp;\\Rightarrow A1B01 \\Rightarrow A1001 \\Rightarrow 1B1001\r\n\\\\&amp;\\Rightarrow101001\r\n\\end{aligned}\r\n\\]</span> 最左推导： <span class=\"math display\">\\[\r\n\\begin{aligned}\r\nS &amp;\\Rightarrow AB \\Rightarrow 1BB \\Rightarrow 10B \\Rightarrow 10S1\\\\\r\n&amp;\\Rightarrow 10AB1 \\Rightarrow 101BB1 \\Rightarrow 1010B1\r\n\\\\&amp;\\Rightarrow101001\r\n\\end{aligned}\r\n\\]</span></p>\r\n<h3 id=\"求短语直接短语句柄\">求短语、直接短语、句柄</h3>\r\n<blockquote>\r\n<p>通过推导关系建立语法树，从而求出上述内容</p>\r\n</blockquote>\r\n<p>例题：设有文法<span\r\nclass=\"math inline\">\\(G[S]=(\\{S,A,B\\},\\{a,b\\},P,S)\\)</span>，求出句型<span\r\nclass=\"math inline\">\\(baSb\\)</span>的短语、直接短语和句柄，其中<span\r\nclass=\"math inline\">\\(P\\)</span>为： <span class=\"math display\">\\[\r\nS \\rightarrow AB\\\\\r\nA \\rightarrow Aa|bB\\\\\r\nB \\rightarrow a|Sb\r\n\\]</span> 列出子树：</p>\r\n<p><img src=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172216255.png\" alt=\"image-20240617221603230\" style=\"zoom:50%;\" /></p>\r\n<p>则短语为：<span\r\nclass=\"math inline\">\\(a,ba,Sb,baSb\\)</span>，直接短语为<span\r\nclass=\"math inline\">\\(a\\)</span>，句柄为<span\r\nclass=\"math inline\">\\(a\\)</span></p>\r\n<p>注意：<span\r\nstyle=\"color:#CC0000;\">直接短语直接找只有一个叶子结点的子树，句柄找最左边的直接短语</span></p>\r\n<h3 id=\"消除文法二义性\">消除文法二义性</h3>\r\n<blockquote>\r\n<p>1.定义优先级，左右结合性</p>\r\n<p>2.构造无二异性文法</p>\r\n</blockquote>\r\n<p>例：构造无二义性文法，使得<span\r\nclass=\"math inline\">\\(*\\)</span>优先级高于<span\r\nclass=\"math inline\">\\(+\\)</span></p>\r\n<p>定义文法如下：（层层递推） <span class=\"math display\">\\[\r\nEXPR1 \\rightarrow EXPR2*EXPR2|EXPR2\\\\\r\nEXPR2 \\rightarrow EXPR3+EXPR3|EXPR3\\\\\r\nEXPR3 \\rightarrow (EXPE1)\r\n\\]</span> <strong>说明文法二义性</strong>：画出两颗不同的语法树即可</p>\r\n<h1 id=\"词法分析\">词法分析</h1>\r\n<h2 id=\"概念-2\">概念</h2>\r\n<h3 id=\"单词符号与定义方式\">单词符号与定义方式</h3>\r\n<p><strong>单词符号</strong></p>\r\n<ul class=\"task-list\">\r\n<li><label><input type=\"checkbox\" />单词符号（独立、<span\r\nstyle=\"color:#CC0000;\">最小语法</span>单位）：关键字、标识符、常数、运算符、界符</label></li>\r\n<li><label><input\r\ntype=\"checkbox\" />单词符号二元式（种类、值）</label></li>\r\n</ul>\r\n<p><strong>正规式与正规集</strong></p>\r\n<ul>\r\n<li><p><label><input type=\"checkbox\" />简单正规式：<span\r\nclass=\"math inline\">\\(\\Phi\\)</span>（空集）、<span\r\nclass=\"math inline\">\\(\\epsilon\\)</span>（空符号串 $ {}<span\r\nclass=\"math inline\">\\(）、\\)</span>a_i<span\r\nclass=\"math inline\">\\(（\\)</span>{a_i}$）</label></p></li>\r\n<li><p><label><input type=\"checkbox\" />规则：<span\r\nclass=\"math inline\">\\(e_1|e_2\\)</span>、<span class=\"math inline\">\\(e_1\r\ne_2\\)</span>、<span\r\nclass=\"math inline\">\\(e_1^*\\)</span>（左结合，优先级：闭包&gt;连接&gt;或）</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />正规式的性质：交换律、结合律、<strong>分配律</strong>、单位元、闭包运算</label></p></li>\r\n<li><p>不能用正规文法表示的不能算作正规集</p></li>\r\n<li><p>注意正规式与正规文法的区别和联系</p></li>\r\n</ul>\r\n<h3 id=\"有穷自动机\">有穷自动机</h3>\r\n<ul>\r\n<li><p><label><input type=\"checkbox\" />五元组（Q，<span\r\nclass=\"math inline\">\\(\\Sigma\\)</span>，f，S，Z）(f和S在NFA和DFA中的不同含义）</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />状态转移矩阵与状态转换图</label></p>\r\n<p><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172348044.png\"\r\nalt=\"image-20240617234851007\" /></p>\r\n<p><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172352359.png\"\r\nalt=\"image-20240617235205325\" /></p></li>\r\n<li><p><label><input type=\"checkbox\" />被识别/被接受、DFA\r\nM识别的语言</label></p></li>\r\n<li><p><label><input\r\ntype=\"checkbox\" />利用自动机构造词法分析程序的流程</label></p></li>\r\n<li><p>对于每个NFA M，存在DMA M’，使得L(M)=L(M’)</p></li>\r\n</ul>\r\n<h2 id=\"题型-1\">题型</h2>\r\n<h3 id=\"由正规式求正规集\">由正规式求正规集</h3>\r\n<blockquote>\r\n<p>可以用枚举法或者形式化语言表示</p>\r\n<p>注意化为形式化语言时，<strong>或、闭包、连接运算怎么转换</strong></p>\r\n</blockquote>\r\n<p><strong>枚举法</strong></p>\r\n<p><span\r\nclass=\"math inline\">\\(ba^*:L(ba^*)=L(b)L(a^*)=\\{b,ba,baa,\\dots\\}\\)</span></p>\r\n<p><strong>形式化语言</strong></p>\r\n<p><span class=\"math inline\">\\((a|b)^*(aa|bb)(a|b)^*:\\)</span></p>\r\n<p><span\r\nclass=\"math inline\">\\(L((a|b)^*(aa|bb)(a|b)^*)=L((a|b)^*)L(aa|bb)L((a|b)^*)=\\{a,b\\}^*\\{aa,bb\\}\\{a,b\\}^*\\)</span></p>\r\n<h3 id=\"由正规文法求正规集\">由正规文法求正规集</h3>\r\n<blockquote>\r\n<ol type=\"1\">\r\n<li>列出联立方程式：<span class=\"math inline\">\\(x=\\alpha x|\\beta\r\n\\Rightarrow x=\\alpha^*\\beta\\)</span>以及<span\r\nclass=\"math inline\">\\(x=x\\alpha|\\beta \\Rightarrow\r\nx=\\beta\\alpha^*\\)</span></li>\r\n<li>通过分配交换结合律解方程</li>\r\n</ol>\r\n</blockquote>\r\n<p>例题：求中的正规式</p>\r\n<p><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172330519.png\"\r\nalt=\"image-20240617233051488\" /></p>\r\n<ul>\r\n<li>首先，列出方程（将或运算变为加号）</li>\r\n<li><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172332226.png\"\r\nalt=\"image-20240617233224199\" /></li>\r\n<li>然后依次带入求解</li>\r\n<li><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172332379.png\"\r\nalt=\"image-20240617233250353\" /></li>\r\n<li><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172332435.png\"\r\nalt=\"image-20240617233259410\" /></li>\r\n<li>最后化为正规式</li>\r\n<li><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172333037.png\"\r\nalt=\"image-20240617233314011\" /></li>\r\n</ul>\r\n<h3 id=\"由正规式求正规文法\">由正规式求正规文法</h3>\r\n<blockquote>\r\n<p>到G的转换如下</p>\r\n<ol type=\"1\">\r\n<li><span class=\"math inline\">\\(V_T=\\Sigma\\)</span></li>\r\n<li><span class=\"math inline\">\\(S=Z\\rightarrow R\\)</span></li>\r\n<li><span class=\"math inline\">\\(A\\rightarrow ab: A\\rightarrow aB,B\r\n\\rightarrow b\\)</span></li>\r\n<li><span class=\"math inline\">\\(A\\rightarrow a^*b :A\\rightarrow\r\naA|b\\)</span></li>\r\n</ol>\r\n</blockquote>\r\n<p>例子：将<span\r\nclass=\"math inline\">\\(R=(a|b)(aa)^*(a|b)\\)</span>转化为正规文法</p>\r\n<p><img src=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172343414.png\" alt=\"image-20240617234357373\" style=\"zoom:80%;\" /></p>\r\n<p>每一个推导式中只能出现<span\r\nstyle=\"color:#CC0000;\">一个非终结符</span></p>\r\n<h3 id=\"由正规式求nfa\">由正规式求NFA</h3>\r\n<p><strong>步骤</strong></p>\r\n<ol type=\"1\">\r\n<li><p>引入初始节点和终止节点</p>\r\n<p><img src=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172355589.png\" alt=\"image-20240617235534559\" style=\"zoom:80%;\" /></p></li>\r\n<li><p>对于基本符号构造NFA</p>\r\n<p><img src=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172356804.png\" alt=\"image-20240617235610774\" style=\"zoom:80%;\" /></p>\r\n<p><img src=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172356488.png\" alt=\"image-20240617235623462\" style=\"zoom:80%;\" /></p></li>\r\n<li><p>对于复合正规式构造节点</p>\r\n<p><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406172357970.png\"\r\nalt=\"image-20240617235708937\" /></p></li>\r\n</ol>\r\n<h3 id=\"由nfa求dfa\">由NFA求DFA</h3>\r\n<p><strong>子集法</strong></p>\r\n<p>画出<strong>状态矩阵</strong>以及确定化DFA图</p>\r\n<ol type=\"1\">\r\n<li>求状态集合，得到某字符+空串能到达的状态。若不同，则为新状态</li>\r\n</ol>\r\n<p><strong>DFA的化简</strong></p>\r\n<ul>\r\n<li>没有多余状态和等价状态</li>\r\n</ul>\r\n<ol type=\"1\">\r\n<li>划分终态集和非终态集。</li>\r\n<li>路径化简，按路径化简划分集合，若为已有集合的子集，则不用划分，若不为已有集合的子集，则需要划分</li>\r\n</ol>\r\n<p>参考：<a\r\nhref=\"https://www.bilibili.com/video/BV1rY411J7cR/?spm_id_from=333.337.search-card.all.click&amp;vd_source=5770856d2f35c8b47bf20bc120936faf\">DFA化简\r\n一看就会 自己和解_哔哩哔哩_bilibili</a></p>\r\n<ul>\r\n<li>答题的时候用官方语言描述：</li>\r\n</ul>\r\n<p><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406180120644.png\"\r\nalt=\"image-20240618012004595\" /></p>\r\n<h3 id=\"有穷自动机转为正规式\">有穷自动机转为正规式</h3>\r\n<ol type=\"1\">\r\n<li><p>增加X节点和Y节点，X连结到所有初态，Y连结到所有终态</p></li>\r\n<li><p>逐步消去M’中的其他结点，消除方式如下：</p>\r\n<p><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406180128651.png\"\r\nalt=\"image-20240618012811609\" /></p></li>\r\n</ol>\r\n<h3 id=\"正规文法与有穷自动机的转换\"><span\r\nstyle=\"color:#CC0000;\">正规文法与有穷自动机的转换</span></h3>\r\n<p><strong>右线性正规文法转有穷自动机</strong></p>\r\n<ol type=\"1\">\r\n<li>获取Q:<span class=\"math inline\">\\(V_N+D\\)</span>，Z:<span\r\nclass=\"math inline\">\\(D\\)</span>，<span\r\nclass=\"math inline\">\\(\\Sigma:V_T\\)</span>，<span\r\nclass=\"math inline\">\\(q_0:S\\)</span></li>\r\n<li><span class=\"math inline\">\\(A \\rightarrow aB \\Rightarrow\r\nf(A,a)=B\\)</span></li>\r\n<li><span class=\"math inline\">\\(A \\rightarrow a \\Rightarrow\r\nf(A,a)=D\\)</span></li>\r\n<li><span class=\"math inline\">\\(A \\rightarrow \\epsilon \\Rightarrow\r\nf(A,\\epsilon)=D\\)</span></li>\r\n</ol>\r\n<p><strong>左线性正规文法转有穷自动机</strong></p>\r\n<ol type=\"1\">\r\n<li>获取Q:<span class=\"math inline\">\\(V_N+q_0\\)</span>，Z:<span\r\nclass=\"math inline\">\\(S\\)</span>，<span\r\nclass=\"math inline\">\\(\\Sigma:V_T\\)</span>，<span\r\nclass=\"math inline\">\\(q_0:q_0\\)</span></li>\r\n<li><span class=\"math inline\">\\(A \\rightarrow Ba \\Rightarrow\r\nf(B,a)=A\\)</span></li>\r\n<li><span class=\"math inline\">\\(A \\rightarrow a \\Rightarrow\r\nf(q_0,a)=A\\)</span></li>\r\n</ol>\r\n<p><strong>有穷自动机到正规文法</strong></p>\r\n<ol type=\"1\">\r\n<li><p><span class=\"math inline\">\\(V_N =\r\nQ,V_T=\\Sigma,S=q_0\\)</span></p></li>\r\n<li><p><span class=\"math inline\">\\(f(A,a)=B,B\\notin Z \\Rightarrow A\r\n\\rightarrow aB\\)</span></p></li>\r\n<li><p><span class=\"math inline\">\\(f(A,a)=B,B\\in Z \\Rightarrow A\r\n\\rightarrow aB|a,B\\rightarrow \\epsilon\\)</span></p></li>\r\n<li><p><span class=\"math inline\">\\(S\\)</span>为终态 <span\r\nclass=\"math inline\">\\(\\Rightarrow S \\rightarrow\r\n\\epsilon\\)</span></p></li>\r\n</ol>\r\n<p>在化简时要注意有没有多余状态：只进不出</p>\r\n<h1 id=\"语法分析\">语法分析</h1>\r\n<h2 id=\"概念-3\">概念</h2>\r\n<ul>\r\n<li>自上而下、自下而上分析方法、非确定性自上而下，确定的自上而下（无左递归、无回溯）</li>\r\n<li>回溯的原因（右部左端第一个符号相同、某一右部推出空串）</li>\r\n<li>LL1文法（无回溯）</li>\r\n<li>递归下降分析法（非终结符、函数、LL1）</li>\r\n<li>预测分析法：构输入缓冲区、分析栈、预测分析表、预测分析器</li>\r\n<li>自下而上的原理（移进、规约）（可规约串的选取、句柄-规范规约/最左素短语-算符优先级）</li>\r\n<li>优先级分析法：优先关系表、算符文法（非终结符相邻）；算符优先文法OPG（不含<span\r\nclass=\"math inline\">\\(\\epsilon\\)</span>规则、一种关系成立）</li>\r\n<li>算符优先分析法不是一种规范归约的分析方法</li>\r\n<li>最左素短语（<span\r\nclass=\"math inline\">\\(\\ge\\)</span>一个终结符），不包含其他素短语</li>\r\n<li>LR语法；LR分析表；移进/归约/接受/报错、规范句型活前缀、归约项目、移进项目、待约项目、接受项目；句柄识别态，接受状态，项目集规范族</li>\r\n</ul>\r\n<h2 id=\"题型与方法\">题型与方法</h2>\r\n<h3 id=\"左递归提取公因子\">左递归/提取公因子</h3>\r\n<p><strong>左递归的消除</strong> <span class=\"math display\">\\[\r\nA \\rightarrow\r\nA\\alpha_1|A\\alpha_2|\\dots|A\\alpha_m|\\beta_1|\\beta_2|\\dots|\\beta_n\r\n\\]</span> 修改为： <span class=\"math display\">\\[\r\nA \\rightarrow \\beta_1A&#39;|\\beta_2A&#39;\\dots|\\beta_nA&#39;\\\\\r\nA&#39;\\rightarrow\r\n\\alpha_1A&#39;|\\alpha_2A&#39;|\\dots|\\alpha_mA&#39;|\\epsilon\r\n\\]</span> <strong>提取公因子</strong> <span class=\"math display\">\\[\r\nA\\rightarrow \\alpha\\beta_1|\\alpha\\beta_2|\\dots|\\alpha\\beta_n\r\n\\]</span> 提取后得到： <span class=\"math display\">\\[\r\nA\\rightarrow aA&#39;\\\\\r\nA&#39; \\rightarrow \\beta_1|\\beta_2|\\dots|\\beta_n\r\n\\]</span></p>\r\n<blockquote>\r\n<p>将非LL(1)转为LL（1）的过程中可能会遇到隐式公共左因子，需要先代入</p>\r\n</blockquote>\r\n<h3 id=\"ll1文法的判定\">LL(1)文法的判定</h3>\r\n<p><strong>FIRST集合</strong></p>\r\n<p>由<span\r\nclass=\"math inline\">\\(\\alpha\\)</span>可以推导出所有的首终结符或者可能的<span\r\nclass=\"math inline\">\\(\\epsilon\\)</span></p>\r\n<p><strong>FOLLOW集合</strong></p>\r\n<p>A后面的所有终结符或<span class=\"math inline\">\\(\\$\\)</span></p>\r\n<p><strong>SELECT集合</strong> <span class=\"math display\">\\[\r\nSELECT(A\\rightarrow \\alpha)=\r\n\\begin{cases}\r\nFIRST(\\alpha)&amp;,a\\nRightarrow \\epsilon\\\\\r\nFIRST(\\alpha)\\setminus{\\epsilon}\\cup FOLLOW(A)&amp;,a\\xRightarrow{*}\r\n\\epsilon\r\n\\end{cases}\r\n\\]</span> <strong>判断条件</strong> <span class=\"math display\">\\[\r\nSELECT(A\\rightarrow \\alpha)\\cap SELECT(A\\rightarrow \\beta)=\\Phi\r\n\\]</span></p>\r\n<h3 id=\"预测分析法\">预测分析法</h3>\r\n<p><strong>预测分析表的构造</strong></p>\r\n<blockquote>\r\n<p>首先需要判断是否为LL(1)文法</p>\r\n</blockquote>\r\n<ol type=\"1\">\r\n<li>计算<span class=\"math inline\">\\(FIRST\\)</span>集和<span\r\nclass=\"math inline\">\\(FOLLOW\\)</span>集</li>\r\n<li><span class=\"math inline\">\\(A\\rightarrow \\alpha,\\alpha \\in\r\nFIRST(A)\\)</span>，则<span class=\"math inline\">\\(M[A,a]=A\\rightarrow\r\n\\alpha\\)</span></li>\r\n<li><span class=\"math inline\">\\(\\epsilon \\in FIRST(A)\\)</span>则对<span\r\nclass=\"math inline\">\\(\\forall b\\in FOLLOW(A),M[A,b]=A\\rightarrow\r\n\\alpha\\)</span></li>\r\n<li>未定义内容用空白格表示</li>\r\n</ol>\r\n<p><strong>预测分析表作用于预测分析器</strong></p>\r\n<p><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406181526458.png\"\r\nalt=\"image-20240618152650413\" /></p>\r\n<h3 id=\"算符优先级分析法\">算符优先级分析法</h3>\r\n<p><strong>终结符优先级的定义</strong></p>\r\n<ul>\r\n<li><span class=\"math inline\">\\(a=b: P\\rightarrow\\dots\r\nab\\dots\\)</span>或<span class=\"math inline\">\\(P\\rightarrow\\dots\r\naQb\\dots\\)</span></li>\r\n<li><span class=\"math inline\">\\(a\\lessdot b:P\\rightarrow \\dots\r\naR\\dots\\)</span>且<span\r\nclass=\"math inline\">\\(R\\xRightarrow{+}Qb/b\\dots\\)</span></li>\r\n<li><span class=\"math inline\">\\(a\\gtrdot b:P\\rightarrow \\dots\r\nRb\\dots\\)</span>且<span\r\nclass=\"math inline\">\\(R\\xRightarrow{+}aQ/a\\dots\\)</span></li>\r\n<li>越包含在里面，在语法树中层级越偏下，优先级越高</li>\r\n</ul>\r\n<p><strong>构造FIRSTVT集</strong> <span class=\"math display\">\\[\r\nFIRSTVT(A)=\\{b|A\\xRightarrow{+}b\\dots or A\\xRightarrow{+}Bb\\dots \\}\r\n\\]</span> <strong>构造LASTVT集</strong> <span class=\"math display\">\\[\r\nLASTVT(A)=\\{a|A\\xRightarrow{+}\\dots a or A\\xRightarrow{+}\\dots aB \\}\r\n\\]</span> <strong>构造表格</strong></p>\r\n<ul>\r\n<li><p>终结符在左，非终结符在右：终结符<span\r\nclass=\"math inline\">\\(\\lessdot\\)</span>非终结符的<span\r\nclass=\"math inline\">\\(FIRSTVT\\)</span>集</p></li>\r\n<li><p>终结符在右，非终结符在左：非终结符的<span\r\nclass=\"math inline\">\\(LASTVT\\)</span>集<span\r\nclass=\"math inline\">\\(\\lessdot\\)</span>终结符</p></li>\r\n<li><p>终结符在左右-&gt;相等</p></li>\r\n<li><p>对于S，<span class=\"math inline\">\\(\\$\\lessdot FIRSTVT,LASTVT\r\n\\gtrdot\\$,\\$=\\$\\)</span></p></li>\r\n</ul>\r\n<p><strong>最左素短语的判断</strong></p>\r\n<p>(太困了，不想写)</p>\r\n<p><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406181628811.png\"\r\nalt=\"image-20240618162834778\" /></p>\r\n<ul>\r\n<li>左右的非终结符也属于素短语</li>\r\n</ul>\r\n<p><strong>分析过程</strong></p>\r\n<p><img\r\nsrc=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406181638576.png\"\r\nalt=\"image-20240618163841540\" /></p>\r\n<h3 id=\"lr0的构造\">LR(0)的构造</h3>\r\n<p><strong>主要内容</strong></p>\r\n<ul>\r\n<li><strong>CLOSURE的构造</strong>（后一个非终结符的展开）</li>\r\n<li><strong>GO函数构造</strong>（点的移动+闭包构造）</li>\r\n<li>重复GO直至不出现新的状态集</li>\r\n</ul>\r\n<p><strong>LR分析表的构造</strong></p>\r\n<ol type=\"1\">\r\n<li>用0~n表示初始状态</li>\r\n<li>ACTION：未结束且接受终结符</li>\r\n<li>GOTO：接受非终结符</li>\r\n<li>ACTION<span\r\nclass=\"math inline\">\\(r_j\\)</span>：已经可归约；终结符或结束符纪</li>\r\n<li>acc：S结束，相对于<span class=\"math inline\">\\(\\$\\)</span></li>\r\n</ol>\r\n<p><img src=\"https://raw.githubusercontent.com/sensuschung/wordpress_image/master/blog/202406182129272.png\" alt=\"image-20240618212900201\" style=\"zoom:80%;\" /></p>\r\n<h3 id=\"slr1文法\">SLR(1)文法</h3>\r\n<ul>\r\n<li>在状态中又有移进项目，又有归约项目</li>\r\n<li>比LR(0)多求一个FOLLOW集</li>\r\n<li>将reduce行求出对应文法FOLLOW集，只给FOLLOW集写reduce即可</li>\r\n</ul>\r\n<p><strong>怎么确定SLR(1)</strong></p>\r\n<p>符号和FOLLOW集交集是否为空串</p>\r\n<h3 id=\"lr1文法\">LR(1)文法</h3>\r\n<p><strong>寻找向前搜索符</strong></p>\r\n<ul>\r\n<li>为空，照抄</li>\r\n<li>不为空，加入FIRST集</li>\r\n</ul>\r\n","text":"概论 概念 翻译程序：源语言、源程序、目标语言、目标程序 编译程序 编译的两大（编译和运行)/三大阶段(编译、汇编和运行）及区别（编译阶段生成的目标程序） 解释...","permalink":"/post/NIS2336","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"study","slug":"study","count":5,"path":"api/categories/study.json"},{"name":"class","slug":"study/class","count":3,"path":"api/categories/study/class.json"}],"tags":[{"name":"review","slug":"review","count":3,"path":"api/tags/review.json"},{"name":"2023-2024Spring","slug":"2023-2024Spring","count":3,"path":"api/tags/2023-2024Spring.json"},{"name":"compiling","slug":"compiling","count":1,"path":"api/tags/compiling.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%AE%BA\"><span class=\"toc-text\">概论</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">判断</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%B3%95%E5%92%8C%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">文法和语言</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5-1\"><span class=\"toc-text\">概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E6%AF%8D%E8%A1%A8%E5%92%8C%E7%AC%A6%E5%8F%B7%E4%B8%B2\"><span class=\"toc-text\">字母表和符号串</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%B3%95%E5%BD%A2%E5%BC%8F%E5%8C%96\"><span class=\"toc-text\">文法形式化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E5%AF%BC%E4%B8%8E%E8%A7%84%E7%BA%A6\"><span class=\"toc-text\">推导与规约</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95%E6%A0%91%E7%9F%AD%E8%AF%AD%E6%96%87%E6%B3%95%E4%BA%8C%E4%B9%89%E6%80%A7\"><span class=\"toc-text\">语法树、短语、文法二义性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%B3%95%E5%92%8C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">文法和语言的分类</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%A4%E6%96%AD-1\"><span class=\"toc-text\">判断</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E5%9E%8B\"><span class=\"toc-text\">题型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%B3%95%E7%9A%84%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">文法的设计</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%81%E6%98%8E%E6%98%AF%E5%8F%A5%E5%9E%8B%E5%8F%A5%E5%AD%90\"><span class=\"toc-text\">证明是句型、句子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E5%B7%B2%E7%9F%A5%E6%96%87%E6%B3%95%E7%A1%AE%E5%AE%9A%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">从已知文法确定语言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E5%AF%BC%E4%B8%8E%E8%A7%84%E7%BA%A6-1\"><span class=\"toc-text\">推导与规约</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B1%82%E7%9F%AD%E8%AF%AD%E7%9B%B4%E6%8E%A5%E7%9F%AD%E8%AF%AD%E5%8F%A5%E6%9F%84\"><span class=\"toc-text\">求短语、直接短语、句柄</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B6%88%E9%99%A4%E6%96%87%E6%B3%95%E4%BA%8C%E4%B9%89%E6%80%A7\"><span class=\"toc-text\">消除文法二义性</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90\"><span class=\"toc-text\">词法分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5-2\"><span class=\"toc-text\">概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E8%AF%8D%E7%AC%A6%E5%8F%B7%E4%B8%8E%E5%AE%9A%E4%B9%89%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">单词符号与定义方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BA\"><span class=\"toc-text\">有穷自动机</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E5%9E%8B-1\"><span class=\"toc-text\">题型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%B1%E6%AD%A3%E8%A7%84%E5%BC%8F%E6%B1%82%E6%AD%A3%E8%A7%84%E9%9B%86\"><span class=\"toc-text\">由正规式求正规集</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%B1%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95%E6%B1%82%E6%AD%A3%E8%A7%84%E9%9B%86\"><span class=\"toc-text\">由正规文法求正规集</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%B1%E6%AD%A3%E8%A7%84%E5%BC%8F%E6%B1%82%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95\"><span class=\"toc-text\">由正规式求正规文法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%B1%E6%AD%A3%E8%A7%84%E5%BC%8F%E6%B1%82nfa\"><span class=\"toc-text\">由正规式求NFA</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%B1nfa%E6%B1%82dfa\"><span class=\"toc-text\">由NFA求DFA</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BA%E8%BD%AC%E4%B8%BA%E6%AD%A3%E8%A7%84%E5%BC%8F\"><span class=\"toc-text\">有穷自动机转为正规式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95%E4%B8%8E%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BA%E7%9A%84%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">正规文法与有穷自动机的转换</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90\"><span class=\"toc-text\">语法分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5-3\"><span class=\"toc-text\">概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E5%9E%8B%E4%B8%8E%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">题型与方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B7%A6%E9%80%92%E5%BD%92%E6%8F%90%E5%8F%96%E5%85%AC%E5%9B%A0%E5%AD%90\"><span class=\"toc-text\">左递归&#x2F;提取公因子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ll1%E6%96%87%E6%B3%95%E7%9A%84%E5%88%A4%E5%AE%9A\"><span class=\"toc-text\">LL(1)文法的判定</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%84%E6%B5%8B%E5%88%86%E6%9E%90%E6%B3%95\"><span class=\"toc-text\">预测分析法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7%E5%88%86%E6%9E%90%E6%B3%95\"><span class=\"toc-text\">算符优先级分析法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lr0%E7%9A%84%E6%9E%84%E9%80%A0\"><span class=\"toc-text\">LR(0)的构造</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#slr1%E6%96%87%E6%B3%95\"><span class=\"toc-text\">SLR(1)文法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lr1%E6%96%87%E6%B3%95\"><span class=\"toc-text\">LR(1)文法</span></a></li></ol></li></ol></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"NIS2334复习","uid":"e1111deafa6114c30ea11c8e9b534620","slug":"ICE2501_Review","date":"2024-06-02T14:16:00.000Z","updated":"2024-06-20T08:41:25.562Z","comments":true,"path":"api/articles/ICE2501_Review.json","keywords":null,"cover":[],"text":"零碎知识点 signals and systems Sa函数 basic signals unit impulse/unit step properties t...","permalink":"/post/ICE2501_Review","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"study","slug":"study","count":5,"path":"api/categories/study.json"},{"name":"class","slug":"study/class","count":3,"path":"api/categories/study/class.json"}],"tags":[{"name":"review","slug":"review","count":3,"path":"api/tags/review.json"},{"name":"2023-2024Spring","slug":"2023-2024Spring","count":3,"path":"api/tags/2023-2024Spring.json"},{"name":"signals&systems","slug":"signals-systems","count":1,"path":"api/tags/signals-systems.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"NIS2334","uid":"9d95c27b9e5cf5edf293baff1f7390d5","slug":"NIS2334","date":"2024-06-02T14:16:00.000Z","updated":"2024-07-23T13:30:42.505Z","comments":true,"path":"api/articles/NIS2334.json","keywords":null,"cover":[],"text":"可能考点！！！！！！ 1.计算题： 扇区读写时间 信号量 周转时间 2.重点 概述 spooling 缓冲/中断/DMA 操作系统的特征 操作系统的功能 操作系...","permalink":"/post/NIS2334","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"study","slug":"study","count":5,"path":"api/categories/study.json"},{"name":"class","slug":"study/class","count":3,"path":"api/categories/study/class.json"}],"tags":[{"name":"review","slug":"review","count":3,"path":"api/tags/review.json"},{"name":"2023-2024Spring","slug":"2023-2024Spring","count":3,"path":"api/tags/2023-2024Spring.json"},{"name":"OS","slug":"OS","count":1,"path":"api/tags/OS.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}